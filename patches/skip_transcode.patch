diff --git a/mediagoblin/media_types/video/config_spec.ini b/mediagoblin/media_types/video/config_spec.ini
index 98714f5..15a1978 100644
--- a/mediagoblin/media_types/video/config_spec.ini
+++ b/mediagoblin/media_types/video/config_spec.ini
@@ -13,6 +13,7 @@ vorbis_quality = float(default=0.3)
 auto_play = boolean(default=False)
 
 [[skip_transcode]]
+never_transcode = boolean(default=False)
 mime_types = string_list(default=list("video/webm"))
 container_formats = string_list(default=list("Matroska"))
 video_codecs = string_list(default=list("VP8 video"))
diff --git a/mediagoblin/media_types/video/util.py b/mediagoblin/media_types/video/util.py
index 604702d..4debd9a 100644
--- a/mediagoblin/media_types/video/util.py
+++ b/mediagoblin/media_types/video/util.py
@@ -30,28 +30,31 @@ def skip_transcode(metadata, size):
     config = mgg.global_config['plugins']['mediagoblin.media_types.video']\
             ['skip_transcode']
 
-    medium_config = mgg.global_config['media:medium']
+    if config['never_transcode']:
+        _log.debug('skip_transcode: dont_transcode was set, skipping transcode without checks')
+        return True
 
-    _log.debug('skip_transcode config: {0}'.format(config))
     tags = metadata.get_tags()
-    if config['mime_types'] and tags.get_string('mimetype'):
-        if not tags.get_string('mimetype') in config['mime_types']:
+    _log.debug('skip_transcode config: {0}'.format(config))
+    _log.debug('skip_transcode media tags: {0}'.format(tags))
+    if config['mime_types'] and tags.get_string('mimetype')[0]:
+        if not tags.get_string('mimetype')[1] in config['mime_types']:
             return False
 
-    if config['container_formats'] and tags.get_string('container-format'):
-        if not (metadata.get_tags().get_string('container-format') in
+    if config['container_formats'] and tags.get_string('container-format')[0]:
+        if not (tags.get_string('container-format')[1] in
                 config['container_formats']):
             return False
 
     if config['video_codecs']:
         for video_info in metadata.get_video_streams():
-            if not (video_info.get_tags().get_string('video-codec') in
+            if not (video_info.get_tags().get_string('video-codec')[1] in
                     config['video_codecs']):
                 return False
 
     if config['audio_codecs']:
         for audio_info in metadata.get_audio_streams():
-            if not (audio_info.get_tags().get_string('audio-codec') in
+            if not (audio_info.get_tags().get_string('audio-codec')[1] in
                     config['audio_codecs']):
                 return False
 
